use std::fs::{self, File};
use std::io::Write;
use std::path::Path;

pub struct ErroneousFile {
    file: File,
}

impl ErroneousFile {
    pub fn new(fname: &Path) -> Self {
        Self {
            file: File::create(fname).unwrap(),
        }
    }
    pub fn write(&mut self, bytes: &[u8]) {
        self.file.write_all(bytes).unwrap();
    }
}

fn main() {
    let path = Path::new("data.txt");
    // First create the file
    let mut file = ErroneousFile::new(&path);
    // Now remove the file
    fs::remove_file(&path).unwrap();
    // Assert that the file doesn't exist
    assert!(!path.exists());
    // Now attempt to write to it
    file.write("OMG".as_bytes()); // NO PANIC!
    // Assert that the file doesn't exist, again
    assert!(!path.exists());
}
